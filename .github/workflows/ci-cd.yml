# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package - Docker

on:
  push:
    branches: [master]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml
  docker:
    name: Publish Dockerhub
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
     
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            madhurimabb/backstage-image:latest
            madhurimabb/backstage-image:${{ github.run_number }}
          context: .
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: docker
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Set up Minikube
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y conntrack
  #         curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
  #         chmod +x minikube
  #         sudo mv minikube /usr/local/bin/
  #         minikube start --driver=docker
  #         minikube status

  #     - name: Install Kubectl
  #       run: |
  #         curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  #         chmod +x kubectl
  #         sudo mv kubectl /usr/local/bin/
  #         kubectl version --client

  #     - name: Build Docker Image
  #       run: |
  #         eval $(minikube docker-env)
  #         docker build -t backstage-image:latest .
  #         minikube image load backstage-image:latest

  #     - name: Apply Kubernetes Manifests
  #       run: |
  #         kubectl apply -f kube/deployment.yaml
  #         kubectl apply -f kube/service.yaml
  #         kubectl get pods
  #         kubectl get services


  
  

    # - name: Publish to GitHub Packages Apache Maven
    #   run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
